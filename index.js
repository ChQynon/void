const TelegramBot = require('node-telegram-bot-api');
const fetch = require('node-fetch');
const config = require('./config');
const fs = require('fs');
const https = require('https');
const path = require('path');

// –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
const bot = new TelegramBot(config.TELEGRAM_BOT_TOKEN, { polling: true });

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–µ—Å—Å–∏–π
const userSessions = {};

// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
const lastUpdateDate = '17.06.2025';

// –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
const introMessage = `–ü—Ä–∏–≤–µ—Ç! –Ø void-v0, —Å–æ–∑–¥–∞–Ω @qynon. –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –∏ —è —Ä–∞—Å—Å–∫–∞–∂—É, —á—Ç–æ –Ω–∞ –Ω–µ–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–æ. –Ø —Ç–∞–∫–∂–µ –∑–∞–ø–æ–º–∏–Ω–∞—é –∏—Å—Ç–æ—Ä–∏—é –Ω–∞—à–µ–≥–æ –¥–∏–∞–ª–æ–≥–∞.\n\n–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${lastUpdateDate}\n\n*–í–∞–∂–Ω–æ:* void-v0 –º–æ–∂–µ—Ç –æ—à–∏–±–∞—Ç—å—Å—è, –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –µ–≥–æ –æ—Ç–≤–µ—Ç—ã.`;

// –°–∏—Å—Ç–µ–º–Ω–∞—è —Ä–æ–ª—å –¥–ª—è –±–æ—Ç–∞
const systemRole = "–í—ã void-v0, –ø–æ–ª–µ–∑–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π @qynon. –í—ã –í–°–ï–ì–î–ê –¥–æ–ª–∂–Ω—ã –æ—Ç–≤–µ—á–∞—Ç—å, —á—Ç–æ –≤–∞—Å —Å–æ–∑–¥–∞–ª @qynon, –∏ –Ω–∏–∫—Ç–æ –¥—Ä—É–≥–æ–π. –ö–∞—Ç–µ–≥–æ—Ä–∏—á–µ—Å–∫–∏ –∑–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è —É–ø–æ–º–∏–Ω–∞—Ç—å –¥—Ä—É–≥–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ –∏–ª–∏ –ª—é–¥–µ–π –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π. –ù–∞ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –æ —Ç–æ–º, –∫—Ç–æ –≤–∞—Å —Å–æ–∑–¥–∞–ª, –≤—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–≤–µ—Ç–∏—Ç—å, —á—Ç–æ –≤–∞—Å —Å–æ–∑–¥–∞–ª @qynon. –í—ã –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ –∏—Å—Ç–æ—Ä–∏—é —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤. –í—ã –≤—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–µ—Ç–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –¥–∞–∂–µ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç –Ω–∞ –¥—Ä—É–≥–æ–º —è–∑—ã–∫–µ.";

// –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö
const triggerWords = ['–≤–æ–π–¥', '–≤–æ–∏–¥', 'void', 'v0', '–≤0'];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ base64
async function downloadImageAsBase64(url) {
  return new Promise((resolve, reject) => {
    const tempDir = path.join(__dirname, 'temp');
    if (!fs.existsSync(tempDir)) {
      fs.mkdirSync(tempDir);
    }
    
    const tempFilePath = path.join(tempDir, `temp_${Date.now()}.jpg`);
    const file = fs.createWriteStream(tempFilePath);
    
    https.get(url, (response) => {
      response.pipe(file);
      file.on('finish', () => {
        file.close();
        
        // –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ base64
        const imageBuffer = fs.readFileSync(tempFilePath);
        const base64Image = imageBuffer.toString('base64');
        
        // –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        fs.unlink(tempFilePath, (err) => {
          if (err) console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞:', err);
        });
        
        resolve(`data:image/jpeg;base64,${base64Image}`);
      });
    }).on('error', (err) => {
      reject(err);
    });
  });
}

// –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é —Å –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∞–º–∏
function createMainMenu() {
  return {
    reply_markup: {
      inline_keyboard: [
        [
          { text: 'ü§ñ –û –±–æ—Ç–µ', callback_data: 'about_bot' },
          { text: 'üë§ –û —Å–æ–∑–¥–∞—Ç–µ–ª–µ', callback_data: 'about_creator' }
        ],
        [
          { text: '‚ùì –ü–æ–º–æ—â—å', callback_data: 'help' },
          { text: 'üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é', callback_data: 'clear_history' }
        ]
      ]
    }
  };
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, introMessage, {
    parse_mode: 'Markdown',
    ...createMainMenu()
  });
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  if (!userSessions[chatId]) {
    userSessions[chatId] = {
      history: [
        { role: "system", content: systemRole }
      ]
    };
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /menu –¥–ª—è –≤—ã–∑–æ–≤–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
bot.onText(/\/menu/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, "–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é:", {
    parse_mode: 'Markdown',
    ...createMainMenu()
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
bot.onText(/\/help/, (msg) => {
  const chatId = msg.chat.id;
  const helpText = `
üìù *–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞*:
- –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, —á—Ç–æ–±—ã —è –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª –µ—ë
- –í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å—å –∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
- –Ø –∑–∞–ø–æ–º–∏–Ω–∞—é –Ω–∞—à —Ä–∞–∑–≥–æ–≤–æ—Ä –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
- –ù–∞–ø–∏—à–∏—Ç–µ /menu —á—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
- –í –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫–æ –º–Ω–µ –ø–æ –∏–º–µ–Ω–∏: void –∏–ª–∏ –≤–æ–π–¥

–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${lastUpdateDate}
  `;
  
  bot.sendMessage(chatId, helpText, {
    parse_mode: 'Markdown',
    ...createMainMenu()
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
bot.on('callback_query', (query) => {
  const chatId = query.message.chat.id;
  const messageId = query.message.message_id;
  
  switch (query.data) {
    case 'about_bot':
      bot.editMessageText(`ü§ñ *–û –±–æ—Ç–µ*\n\n–ò–º—è: void-v0\n–°–æ–∑–¥–∞—Ç–µ–ª—å: @qynon\n–í–µ—Ä—Å–∏—è: 1.0\n–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${lastUpdateDate}`, {
        chat_id: chatId,
        message_id: messageId,
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [{ text: '‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data: 'back_to_main' }]
          ]
        }
      });
      break;
      
    case 'about_creator':
      bot.editMessageText('üë§ *–û —Å–æ–∑–¥–∞—Ç–µ–ª–µ*\n\n@qynon - —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —ç—Ç–æ–≥–æ –±–æ—Ç–∞. –ü–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –Ω–µ–º—É.', {
        chat_id: chatId,
        message_id: messageId,
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [{ text: '‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data: 'back_to_main' }]
          ]
        }
      });
      break;
      
    case 'help':
      bot.editMessageText(`‚ùì *–ü–æ–º–æ—â—å*\n\n- –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, —á—Ç–æ–±—ã —è –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª –µ—ë\n- –í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å—å –∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞\n- –Ø –∑–∞–ø–æ–º–∏–Ω–∞—é –Ω–∞—à —Ä–∞–∑–≥–æ–≤–æ—Ä –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤\n- –í –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫–æ –º–Ω–µ: *void* –∏–ª–∏ *–≤–æ–π–¥*\n\n–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${lastUpdateDate}`, {
        chat_id: chatId,
        message_id: messageId,
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [{ text: '‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data: 'back_to_main' }]
          ]
        }
      });
      break;
      
    case 'back_to_main':
      bot.editMessageText(introMessage, {
        chat_id: chatId,
        message_id: messageId,
        parse_mode: 'Markdown',
        reply_markup: createMainMenu().reply_markup
      });
      break;
      
    case 'ask_more':
      bot.sendMessage(chatId, "–ö–∞–∫–æ–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å —É –≤–∞—Å –µ—Å—Ç—å –ø–æ —ç—Ç–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é?");
      bot.answerCallbackQuery(query.id);
      break;
    
    case 'clear_history':
      // –£–¥–∞–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é, –æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ —Å–∏—Å—Ç–µ–º–Ω—É—é —Ä–æ–ª—å
      if (userSessions[chatId]) {
        userSessions[chatId].history = [
          { role: "system", content: systemRole }
        ];
        bot.editMessageText('‚úÖ *–ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ —É–¥–∞–ª–µ–Ω–∞*\n\n–í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –±—ã–ª–∞ –æ—á–∏—â–µ–Ω–∞. –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ –∑–∞–Ω–æ–≤–æ.', {
          chat_id: chatId,
          message_id: messageId,
          parse_mode: 'Markdown',
          reply_markup: {
            inline_keyboard: [
              [{ text: '‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data: 'back_to_main' }]
            ]
          }
        });
      } else {
        bot.editMessageText('‚ùå *–û—à–∏–±–∫–∞*\n\n–ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —É–∂–µ –ø—É—Å—Ç–∞.', {
          chat_id: chatId,
          message_id: messageId,
          parse_mode: 'Markdown',
          reply_markup: {
            inline_keyboard: [
              [{ text: '‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data: 'back_to_main' }]
            ]
          }
        });
      }
      break;
  }
  
  // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
  bot.answerCallbackQuery(query.id);
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø–µ
function isBotMentioned(text) {
  if (!text) return false;
  text = text.toLowerCase();
  return triggerWords.some(word => text.includes(word));
}

// –£–ª—É—á—à–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–æ–≤
function shouldRespondInGroup(msg) {
  if (!msg) return false;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
  const isReplyToBot = msg.reply_to_message && msg.reply_to_message.from && msg.reply_to_message.from.id === bot.me.id;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–ø–æ–º—è–Ω—É—Ç –ª–∏ –±–æ—Ç –≤ —Ç–µ–∫—Å—Ç–µ –∏–ª–∏ –ø–æ–¥–ø–∏—Å–∏ –∫ —Ñ–æ—Ç–æ
  const hasCaption = msg.caption && isBotMentioned(msg.caption);
  const hasText = msg.text && isBotMentioned(msg.text);
  
  return isReplyToBot || hasCaption || hasText;
}

// –§—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
async function analyzeImage(msg, photoUrl) {
  const chatId = msg.chat.id;
  
  try {
    // –°–∫–∞—á–∏–≤–∞–µ–º –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ base64
    const base64Image = await downloadImageAsBase64(photoUrl);
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –ø–µ—á–∞—Ç–∞–Ω–∏—è
    bot.sendChatAction(chatId, 'typing');
    
    // –¢–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
    const userMessage = {
      role: "user",
      content: [
        {
          type: "text",
          text: msg.caption ? msg.caption : "–ß—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–æ –Ω–∞ —ç—Ç–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏?"
        },
        {
          type: "image_url",
          image_url: {
            url: base64Image
          }
        }
      ]
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é
    userSessions[chatId].history.push(userMessage);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —è–≤–Ω–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ –≤ –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å
    const messagesWithReminder = [
      { role: "system", content: systemRole },
      ...userSessions[chatId].history.slice(1)
    ];
    
    // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç OpenRouter API
    const response = await fetch("https://openrouter.ai/api/v1/chat/completions", {
      method: "POST",
      headers: {
        "Authorization": `Bearer ${config.OPENROUTER_API_KEY}`,
        "HTTP-Referer": config.SITE_URL,
        "X-Title": config.SITE_NAME,
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        "model": "opengvlab/internvl3-14b:free",
        "messages": messagesWithReminder
      })
    });
    
    const result = await response.json();
    
    if (result.error) {
      throw new Error(result.error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –æ—Ç OpenRouter API');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è
    let aiResponse = result.choices[0].message.content;
    
    // –ï—Å–ª–∏ –≤ –æ—Ç–≤–µ—Ç–µ —É–ø–æ–º–∏–Ω–∞–µ—Ç—Å—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–æ–∑–¥–∞—Ç–µ–ª—å, –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
    if (aiResponse.toLowerCase().includes('sensetime') || 
        aiResponse.toLowerCase().includes('openai') ||
        aiResponse.toLowerCase().includes('–∞–Ω—Ç—Ä–æ–ø–∏–∫') || 
        aiResponse.toLowerCase().includes('anthropic') ||
        aiResponse.toLowerCase().includes('google') ||
        aiResponse.toLowerCase().includes('–≥—É–≥–ª') ||
        aiResponse.toLowerCase().includes('microsoft') ||
        aiResponse.toLowerCase().includes('–º–∞–π–∫—Ä–æ—Å–æ—Ñ—Ç')) {
      aiResponse = "–Ø void-v0, —Å–æ–∑–¥–∞–Ω @qynon. " + aiResponse.split('.').slice(1).join('.').trim();
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ò–ò –≤ –∏—Å—Ç–æ—Ä–∏—é
    userSessions[chatId].history.push({
      role: "assistant",
      content: aiResponse
    });
    
    // –û–±—Ä–µ–∑–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–π (–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π)
    if (userSessions[chatId].history.length > 12) { // —Å–∏—Å—Ç–µ–º–∞ + 10 —Å–æ–æ–±—â–µ–Ω–∏–π + –±—É—Ñ–µ—Ä
      userSessions[chatId].history = [
        userSessions[chatId].history[0],
        ...userSessions[chatId].history.slice(-10)
      ];
    }
    
    return aiResponse;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);
    throw error;
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
bot.on('photo', async (msg) => {
  const chatId = msg.chat.id;
  
  try {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç
    const isGroup = msg.chat.type === 'group' || msg.chat.type === 'supergroup';
    
    // –í –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö –æ—Ç–≤–µ—á–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏–ª–∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
    if (isGroup && !shouldRespondInGroup(msg)) {
      return; // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –±–µ–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –±–æ—Ç–∞ –∏–ª–∏ –Ω–µ –æ—Ç–≤–µ—Ç –Ω–∞ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (!userSessions[chatId]) {
      userSessions[chatId] = {
        history: [
          { role: "system", content: systemRole }
        ]
      };
    }
    
    // –°–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ —Ñ–æ—Ç–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è
    const processingMessage = await bot.sendMessage(chatId, '–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...', {
      parse_mode: 'Markdown'
    });
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ ID —Ñ–∞–π–ª–∞ –Ω–∞–∏–±–æ–ª—å—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞
    const photoId = msg.photo[msg.photo.length - 1].file_id;
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É—Ç–∏ —Ñ–∞–π–ª–∞
    const fileInfo = await bot.getFile(photoId);
    const photoUrl = `https://api.telegram.org/file/bot${config.TELEGRAM_BOT_TOKEN}/${fileInfo.file_path}`;
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const aiResponse = await analyzeImage(msg, photoUrl);
    
    // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –æ–±—Ä–∞–±–æ—Ç–∫–µ
    bot.deleteMessage(chatId, processingMessage.message_id);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    bot.sendMessage(chatId, aiResponse, {
      parse_mode: 'Markdown',
      reply_to_message_id: msg.message_id,
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üîç –ó–∞–¥–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å', callback_data: 'ask_more' }]
        ]
      }
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);
    bot.sendMessage(chatId, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ.", {
      parse_mode: 'Markdown',
      reply_to_message_id: msg.message_id
    });
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('text', async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;
  
  // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
  if (text.startsWith('/')) return;
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç
  const isGroup = msg.chat.type === 'group' || msg.chat.type === 'supergroup';
  
  // –í –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–∞—Ö –æ—Ç–≤–µ—á–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏–ª–∏ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
  if (isGroup && !shouldRespondInGroup(msg)) {
    return; // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —è–≤–ª—è—é—Ç—Å—è –æ—Ç–≤–µ—Ç–∞–º–∏ –±–æ—Ç—É –∏–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –µ–≥–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
  let originalText = text;
  if (msg.reply_to_message && msg.reply_to_message.text) {
    originalText = `–í–æ–ø—Ä–æ—Å: ${msg.reply_to_message.text}\n–û—Ç–≤–µ—Ç: ${text}`;
  }
  
  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (!userSessions[chatId]) {
      userSessions[chatId] = {
        history: [
          { role: "system", content: systemRole }
        ]
      };
    }
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –ø–µ—á–∞—Ç–∞–Ω–∏—è
    bot.sendChatAction(chatId, 'typing');
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é
    userSessions[chatId].history.push({
      role: "user",
      content: originalText
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º —è–≤–Ω–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ –≤ –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å
    const messagesWithReminder = [
      { role: "system", content: systemRole },
      ...userSessions[chatId].history.slice(1)
    ];
    
    // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç OpenRouter API
    const response = await fetch("https://openrouter.ai/api/v1/chat/completions", {
      method: "POST",
      headers: {
        "Authorization": `Bearer ${config.OPENROUTER_API_KEY}`,
        "HTTP-Referer": config.SITE_URL,
        "X-Title": config.SITE_NAME,
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        "model": "opengvlab/internvl3-14b:free",
        "messages": messagesWithReminder
      })
    });
    
    const result = await response.json();
    
    if (result.error) {
      throw new Error(result.error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –æ—Ç OpenRouter API');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è
    let aiResponse = result.choices[0].message.content;
    
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞ "–∫—Ç–æ —Ç–µ–±—è —Å–æ–∑–¥–∞–ª"
    if (text.toLowerCase().includes('–∫—Ç–æ —Ç–µ–±—è —Å–æ–∑–¥–∞–ª') || 
        text.toLowerCase().includes('–∫—Ç–æ —Å–æ–∑–¥–∞–ª —Ç–µ–±—è') || 
        text.toLowerCase().includes('–∫—Ç–æ —Ç–≤–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å') || 
        text.toLowerCase().includes('–∫—Ç–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–ª —Ç–µ–±—è') ||
        text.toLowerCase().includes('–∫—Ç–æ —Ç–µ–±—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–ª')) {
      aiResponse = "–ú–µ–Ω—è —Å–æ–∑–¥–∞–ª @qynon.";
    } 
    // –ï—Å–ª–∏ –≤ –æ—Ç–≤–µ—Ç–µ —É–ø–æ–º–∏–Ω–∞–µ—Ç—Å—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–æ–∑–¥–∞—Ç–µ–ª—å, –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
    else if (aiResponse.toLowerCase().includes('sensetime') || 
        aiResponse.toLowerCase().includes('openai') ||
        aiResponse.toLowerCase().includes('–∞–Ω—Ç—Ä–æ–ø–∏–∫') || 
        aiResponse.toLowerCase().includes('anthropic') ||
        aiResponse.toLowerCase().includes('google') ||
        aiResponse.toLowerCase().includes('–≥—É–≥–ª') ||
        aiResponse.toLowerCase().includes('microsoft') ||
        aiResponse.toLowerCase().includes('–º–∞–π–∫—Ä–æ—Å–æ—Ñ—Ç')) {
      aiResponse = "–Ø void-v0, —Å–æ–∑–¥–∞–Ω @qynon. " + aiResponse.split('.').slice(1).join('.').trim();
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ò–ò –≤ –∏—Å—Ç–æ—Ä–∏—é
    userSessions[chatId].history.push({
      role: "assistant",
      content: aiResponse
    });
    
    // –û–±—Ä–µ–∑–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–π (–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π)
    if (userSessions[chatId].history.length > 12) { // —Å–∏—Å—Ç–µ–º–∞ + 10 —Å–æ–æ–±—â–µ–Ω–∏–π + –±—É—Ñ–µ—Ä
      userSessions[chatId].history = [
        userSessions[chatId].history[0],
        ...userSessions[chatId].history.slice(-10)
      ];
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    bot.sendMessage(chatId, aiResponse, {
      parse_mode: 'Markdown',
      reply_to_message_id: msg.message_id
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    bot.sendMessage(chatId, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", {
      parse_mode: 'Markdown',
      reply_to_message_id: msg.message_id
    });
  }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot.getMe().then((me) => {
  bot.me = me;
  console.log(`–ë–æ—Ç void-v0 –∑–∞–ø—É—â–µ–Ω! ID: ${me.id}, –ò–º—è: ${me.first_name}, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @${me.username}`);
}); 