/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ–±—Ö—É–∫–∞ Telegram –¥–ª—è Render
 */

const fetch = require('node-fetch');

// –ß—Ç–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN || process.argv[2];
const RENDER_SITE_URL = process.env.SITE_URL || process.argv[3];

if (!TELEGRAM_BOT_TOKEN) {
  console.error('–û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–∫–∞–∂–∏—Ç–µ —Ç–æ–∫–µ–Ω –∫–∞–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –ø–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏.');
  console.error('–ù–∞–ø—Ä–∏–º–µ—Ä: node setup-webhook-render.js YOUR_BOT_TOKEN https://your-app.onrender.com');
  process.exit(1);
}

if (!RENDER_SITE_URL) {
  console.error('–û—à–∏–±–∫–∞: SITE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–∫–∞–∂–∏—Ç–µ URL –∫–∞–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –≤—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏.');
  console.error('–ù–∞–ø—Ä–∏–º–µ—Ä: node setup-webhook-render.js YOUR_BOT_TOKEN https://your-app.onrender.com');
  process.exit(1);
}

// –î–æ–±–∞–≤–ª—è–µ–º /webhook –∫ URL —Å–∞–π—Ç–∞
const webhookUrl = `${RENDER_SITE_URL}/webhook`;
const telegramApiUrl = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/setWebhook?url=${encodeURIComponent(webhookUrl)}`;

console.log(`\nüîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è Telegram –±–æ—Ç–∞ –Ω–∞ Render\n`);
console.log(`–ë–æ—Ç —Ç–æ–∫–µ–Ω: ${TELEGRAM_BOT_TOKEN.substring(0, 5)}...`);
console.log(`URL —Å–∞–π—Ç–∞: ${RENDER_SITE_URL}`);
console.log(`Webhook URL: ${webhookUrl}\n`);

async function deleteCurrentWebhook() {
  try {
    console.log('–£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤–µ–±—Ö—É–∫–∞...');
    
    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/deleteWebhook`);
    const data = await response.json();
    
    if (data.ok) {
      console.log('‚úÖ –¢–µ–∫—É—â–∏–π –≤–µ–±—Ö—É–∫ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω');
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤–µ–±—Ö—É–∫–∞:', data.description);
    }
  } catch (error) {
    console.error('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤–µ–±—Ö—É–∫–∞:', error);
  }
}

async function setupWebhook() {
  try {
    console.log(`–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–æ–≤–æ–≥–æ –≤–µ–±—Ö—É–∫–∞ –Ω–∞ URL: ${webhookUrl}`);
    
    const response = await fetch(telegramApiUrl);
    const data = await response.json();
    
    if (data.ok) {
      console.log('‚úÖ –í–µ–±—Ö—É–∫ —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!');
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –≤–µ–±—Ö—É–∫–∞:', data.description);
    }
  } catch (error) {
    console.error('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API Telegram:', error);
  }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–µ–±—Ö—É–∫–µ
async function getWebhookInfo() {
  try {
    console.log('–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–µ–±—Ö—É–∫–µ...');
    
    const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getWebhookInfo`);
    const data = await response.json();
    
    if (data.ok) {
      console.log('\n--- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ–±—Ö—É–∫–µ ---');
      console.log(`URL: ${data.result.url || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
      console.log(`–£—Å–ø–µ—à–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: ${data.result.pending_update_count || 0}`);
      console.log(`–ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: ${data.result.last_error_message || '–Ω–µ—Ç'}`);
      
      if (data.result.url === webhookUrl) {
        console.log('\n‚úÖ –í–µ–±—Ö—É–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
      } else if (data.result.url) {
        console.log('\n‚ö†Ô∏è –í–µ–±—Ö—É–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –Ω–æ –Ω–∞ –¥—Ä—É–≥–æ–π URL. –¢–µ–∫—É—â–∏–π URL –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Ç—Ä–µ–±—É–µ–º–æ–≥–æ.');
      } else {
        console.log('\n‚ö†Ô∏è –í–µ–±—Ö—É–∫ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
      }
    } else {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–µ–±—Ö—É–∫–µ:', data.description);
    }
  } catch (error) {
    console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–µ–±—Ö—É–∫–µ:', error);
  }
}

// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞
async function testServerStatus() {
  try {
    console.log(`\n–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞ ${RENDER_SITE_URL}...`);
    
    const response = await fetch(RENDER_SITE_URL);
    const status = response.status;
    
    if (status >= 200 && status < 300) {
      console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω, –∫–æ–¥ –æ—Ç–≤–µ—Ç–∞: ${status}`);
      
      try {
        const data = await response.json();
        console.log('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', data);
      } catch (e) {
        console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON');
      }
    } else {
      console.error(`‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É. –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: ${status}`);
    }
  } catch (error) {
    console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–π
(async () => {
  await testServerStatus();
  await getWebhookInfo();
  console.log('\n---------------------------------');
  await deleteCurrentWebhook();
  console.log('---------------------------------');
  await setupWebhook();
  console.log('---------------------------------');
  await getWebhookInfo();
  console.log('\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Render:');
  console.log('TELEGRAM_BOT_TOKEN, OPENROUTER_API_KEY, SITE_URL, SITE_NAME, NODE_ENV=production, RENDER=true');
})(); 